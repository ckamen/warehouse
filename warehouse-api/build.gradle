buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'

        // logging
        slf4jVersion = '1.7.25'
        log4j2Version = '2.10.0'

        // 3rd party
        guavaVersion = "24.1-jre"
        druidVersion = '1.1.9'
        jsonVersion = '20180130'
        okHttpVersion = '3.10.0'
        jaiCoreVersion = '1.1.3'
        jaiCodecVersion = '1.1.3'
        simpleImageVersion = '1.2.3'
        poiVersion = '3.17'
        jacksonVersion = '2.9.5'

        // Apache Commons
        commonsIoVersion = '2.6'
        commonsLangVersion = '3.7'
        commonsTextVersion = '1.2'
        commonsCodecVersion = '1.11'
        commonsFileuploadVersion = '1.3.3'
        commonsBeanutilsVersion = '1.9.3'
        commonsCollectionsVersion = '4.1'
        commonsCompressVersion = '1.16.1'
        commonsMailVersion = '1.5'

        // Tomcat
        tomcatVersion = '8.5.29'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// ====================================================
// 以下库可以直接覆盖SpringBoot的版本，保证各个模块间的版本一致
// ====================================================
ext['slf4j.version'] = "${slf4jVersion}"
ext['log4j2.version'] = "${log4j2Version}"
ext['jackson.version'] = "${jacksonVersion}"
ext['tomcat.version'] = "${tomcatVersion}"

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.csg'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    maven {
        url "http://maven.aliyun.com/nexus/content/groups/public"
    }
    mavenCentral()
    jcenter()
}

configurations {
    compile.exclude module: 'commons-logging'
    compile.exclude group: 'ch.qos.logback'
    compile.exclude module: 'slf4j-log4j12'
    compile.exclude module: 'spring-boot-starter-logging'
}

dependencies {
//	compile('org.springframework.boot:spring-boot-starter-amqp')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-cache')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
//	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
//	compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
//	compile('org.springframework.boot:spring-boot-starter-mail')
//	compile('org.springframework.boot:spring-boot-starter-quartz')
//	compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-validation')
    compile('org.springframework.boot:spring-boot-starter-web')
//	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
    compile("org.springframework.boot:spring-boot-starter-log4j2")


    compile('com.baomidou:mybatisplus-spring-boot-starter:1.0.5')
    compile('com.baomidou:mybatis-plus:2.2.0')

    compile('org.springframework.data:spring-data-rest-hal-browser')
//	compile('org.springframework.session:spring-session-data-redis')
    // database & datasource
    compile("mysql:mysql-connector-java")
    compile("com.alibaba:druid:${druidVersion}")

    // 3rd party
    compile("org.jdom:jdom2")
    compile("joda-time:joda-time")
    compile("com.google.code.gson:gson")
    compile("org.json:json:${jsonVersion}")
    compile("com.google.guava:guava:${guavaVersion}")
    compile("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
    compile("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
    compile("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
    compile("com.squareup.okhttp3:okhttp:${okHttpVersion}")
    compile("javax.media.jai:com.springsource.javax.media.jai.core:${jaiCoreVersion}")
    compile("javax.media.jai:com.springsource.javax.media.jai.codec:${jaiCodecVersion}")
    compile("com.alibaba:simpleimage:${simpleImageVersion}")

    // apache commons
    compile("org.apache.commons:commons-text:${commonsTextVersion}")
    compile("org.apache.commons:commons-lang3:${commonsLangVersion}")
    compile("org.apache.commons:commons-compress:${commonsCompressVersion}")
    compile("org.apache.commons:commons-collections4:${commonsCollectionsVersion}")
    compile("org.apache.commons:commons-email:${commonsMailVersion}")
    compile("commons-fileupload:commons-fileupload:${commonsFileuploadVersion}")
    compile("commons-io:commons-io:${commonsIoVersion}")
    compile("commons-beanutils:commons-beanutils:${commonsBeanutilsVersion}")
    compile("commons-codec:commons-codec:${commonsCodecVersion}")
    compile("org.apache.httpcomponents:httpclient:4.5.4")

    // apache poi
    compile("org.apache.poi:poi:${poiVersion}")
    compile("org.apache.poi:poi-ooxml:${poiVersion}")

    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('com.h2database:h2')
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')

}
